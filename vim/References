References and future Improvements




:Vim Buffer Exploror And Tag Stack
-------------------------------------------------
https://github.com/vim-scripts/cscope_win/blob/master/plugin/cscope_win.vim
https://github.com/vim-scripts/acsb/blob/master/README.orig
https://github.com/jlanzarotta/bufexplorer/blob/master/plugin/bufexplorer.vim


https://searchcode.com/codesearch/view/77464705/
https://stackoverflow.com/questions/14915971/cscope-how-to-use-cscope-to-search-for-a-symbol-using-command-line
https://www.vim.org/scripts/script.php?script_id=1076

-------------------------------------------------


Vim  Color Test :
:VimColorTest  OR GVimColorTest

VimBuffer Programming reference:1
1. https://ddrscott.github.io/blog/2016/side-search/
2. https://github.com/vim-scripts/multiwindow-source-code-browsing/blob/master/ftplugin/gtags_mwin.vim
3. https://www.vim.org/scripts/script.php?script_id=3868
4. 
5




VERY GOOD
https://alex.dzyoba.com/blog/vim-revamp/
https://stackoverflow.com/questions/36364132/cscope-does-not-save-jumps-to-the-tag-stack-when-cscopequickfix-is-set-to-use-qu


Making Alt Work in vim:
https://vim.fandom.com/wiki/Fix_meta-keys_that_break_out_of_Insert_mode
https://unix.stackexchange.com/questions/14765/how-to-map-alt-key-in-vimrc




Have a look


http://www.gnu.org/software/global/links.html
https://github.com/hewes/unite-gtags


Issues:
1. reditor is not doing proper syntax from .vim/syntax folder
    vimdoc.sourceforge.net/htmldoc/syntax.html


search : General - Color syntax for local variables and user defined


QuickFix:
https://stackoverflow.com/questions/21838975/vim-quickfix-avoid-buffer-change
http://andrewradev.com/2011/06/08/vim-and-ctags/
https://vi.stackexchange.com/questions/2904/how-to-show-search-results-for-all-open-buffers
https://github.com/kiteco/vim-plugin/pull/216/files



CTAGS:
https://gist.github.com/bsdcpp/4653660
https://stackoverflow.com/questions/11921446/cscope-and-ctag-cannot-find-a-function-definition-which-is-located-in-class-decl
https://stackoverflow.com/questions/17783539/tag-navigation-in-vim
https://andrew.stwrt.ca/posts/vim-ctags/
:tag /^asserts_* would find all tags that start with ‘asserts_’. By default vim will jump to the first result, but a number of 

commands can be used to sort through the list of tags:

:ts or :tselect shows the list
:tn or :tnext goes to the next tag in that list
:tp or :tprev goes to the previous tag in that list
:tf or :tfirst goes to the first tag of the list
:tl or :tlast goes to the last tag of the list
To show the tags you’ve traversed since you opened vim, run :tags.

https://www.oreilly.com/library/view/learning-the-vi/9780596529833/ch14s04.html
https://stackoverflow.com/questions/15906029/how-to-display-all-results-of-a-search-in-vim

TODO:
https://stackoverflow.com/questions/15906029/how-to-display-all-results-of-a-search-in-vim
https://learnvimscriptthehardway.stevelosh.com/chapters/28.html
https://stackoverflow.com/questions/18178768/vimscript-call-vs-execute
https://vi.stackexchange.com/questions/13509/use-only-closest-tagfile-to-working-directory-of-buffer-or-of-vim-process

https://superuser.com/questions/815416/hitting-enter-in-the-quickfix-window-doesnt-work
https://stackoverflow.com/questions/17783539/tag-navigation-in-vim
https://stackoverflow.com/questions/21838975/vim-quickfix-avoid-buffer-change
https://superuser.com/questions/775723/cw-command-in-vim-how-to-avoid-auto-jumping-to-first-error
http://vimdoc.sourceforge.net/htmldoc/version6.html





Install Ctags/Cscope in ubuntu:
https://superuser.com/questions/66367/is-it-possible-to-install-ctags-without-root-privs

cd
mkdir tmp
cd tmp 
wget http://mirrors.kernel.org/ubuntu/pool/main/e/exuberant-ctags/exuberant-ctags_5.5.4-1_i386.deb
dpkg -x exuberant-ctags_5.5.4-1_i386.deb .
mkdir ~/bin
cp usr/bin/ctags-exuberant ~/bin
cd ~/bin
ln -sf ctags-exuberant ctags
export PATH=$PATH:$HOME/bin

Cscope:
https://ubuntu.pkgs.org/18.04/ubuntu-universe-i386/cscope_15.8b-3_i386.deb.html
http://archive.ubuntu.com/ubuntu/pool/universe/c/cscope/cscope_15.8b-3_amd64.deb
http://mirrors.kernel.org/ubuntu/pool/universe/c/cscope/cscope_15.8b-3_amd64.deb


Install Global in Ubuntu
$ wget http://tamacom.com/global/global-6.6.3.tar.gz 
$ ./configure --prefix=$HOME --with-sqlite3 --disable-gtagscscope --with-exuberant-ctags=/usr/bin/ctags
$ make
$ make install






ctags_mwin.vim Leftover to refer

"if has("cscope")
    "https://vimhelp.org/if_cscop.txt.html
    "https://stackoverflow.com/questions/30087730/cscope-ctrl-does-not-work?rq=1a
    "http://cscope.sourceforge.net/cscope_maps.vim
    "set csprg=/usr/local/bin/cscope
    "set csto=0
    "set cst
    "set nocsverb
    " add any database in current directory
    "if filereadable("cscope.out")
    "    cs add cscope.out
    " else add database pointed to by environment
    "elseif $CSCOPE_DB != ""
        "cs add $CSCOPE_DB
    "endif
    "set csverb
"endif

let s:result=[]
function! UpdateBuf( file, no, pattern, search)
	
	let tag = GetStackTopTag()
    if tag.TagType == "TAG" 
		let data = a:search
	else
		"let data = a:file. "\t".a:no."\t". a:search
		let data = substitute(a:search, '^[ \t]*', '', "g")
		let data = printf("%-30s  |%4d|  %s", a:file, a:no, data)
	endif
	call add(s:result, data)
endfunc

function! s:SearchCmd(search_type, pattern)
	let s:result=[]
	"let tag = GetStackTopTag()
	let l:line_no = getpos(".")

   
    echo a:search_type a:pattern." call UpdateBuf( bufname(\"%\") ,  line(\".\") ,  \"".a:pattern."\", getline(\".\") )"
	execute  a:search_type." ".a:pattern." call UpdateBuf( bufname(\"%\") ,  line(\".\") ,  \"".a:pattern."\", getline(\".\") )"
    call setpos(".", l:line_no)

	if len(s:result)>0
		"call CopyCurrentToStackTop()
		"call PushTag(a:pattern, a:pattern, bufname("%"))
		call SetStackTopTag("SEARCH", "SEARCH", bufname("%"), "FILE", l:line_no)
		call OpenTag("SEARCH", a:pattern, s:result)
	endif
endfunc



function! GtagsAutoComplete_ctags()
    call inputsave()
        let l:input = input('Enter pattern:')
            call inputrestore()
	"let l:input = input("CS-DEF-PATTERN:","", "custom,GtagsComplete_subsearch")
	if(l:input == '') 
		return 
	endif

	let l:pattern = l:input

	let l:pattern = substitute(l:pattern, '^.', '', "g")

	let search_type = l:input[0]

	if search_type == '~'
		call s:SearchCmd("cscope find s", l:pattern)
	else
		call s:SearchCmd("cscope find s", l:input)
	endif

endfunc
"exec " noremap	" . g:gtags_cmd_ctags_def_search . " :call GtagsAutoComplete_ctags() <CR>"
"exec " inoremap " . g:gtags_cmd_ctags_def_search . " <ESC> :call GtagsAutoComplete_ctags() <CR>"


